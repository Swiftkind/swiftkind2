# Generated by Django 2.1.1 on 2019-07-15 05:15

import account.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=72, null=True)),
                ('last_name', models.CharField(blank=True, max_length=72, null=True)),
                ('position', models.CharField(choices=[('1', 'developer'), ('2', 'designer'), ('3', 'trainee'), ('0', 'management'), ('4', 'staff')], default='1', max_length=1)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=account.models.upload_avatar_to, verbose_name='profile picture')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user is active', verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates whether the user is super user or site admin', verbose_name='super user')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
